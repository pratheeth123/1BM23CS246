#include<stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node *Next;
};
struct Node * newNode(int data){
    struct Node* new;
    new= (struct Node *)malloc(sizeof(struct Node));
    new->data=data;
    new->Next=NULL;
    return new;
}
struct Node *enqueue(struct Node *front,struct Node **rear,int data){
    struct Node *newN=newNode(data);
    if(front==NULL){
        front=newN;
        *rear=newN;
    }
    else{
        (*rear)->Next=newN;
        *rear=newN;
    }
    printf("\n %d inserted",data);
    return front;
}
struct Node *dequeue(struct Node *front){
if(front==NULL){
    printf("underflow");
    return NULL;
}
struct Node *ptr=front;
front=front->Next;
printf("\n %d removed from queue",ptr->data);
free(ptr);
return front;
}
void display(struct Node *front){
    struct Node *ptr;
    ptr=front;
    printf("\n The Queue is: ");
    while(ptr!=NULL){
        printf("%d -> ",ptr->data);
        ptr=ptr->Next;
    }
    printf("NULL");
}
int main() {
    int choice;
    printf("\n1: Insert\n2: Delete\n3: Display\n4: Exit\n");
    int flag = 1;
    while (flag) {
        printf("\nEnter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1: {
                int data;
                printf("Enter data: ");
                scanf("%d", &data);
                top = push(top, data);
                break;
            }
            case 2: 
                top = delete(top);
                break;
            case 3: 
                display(top);
                break;
            case 4: 
                flag = 0;
                break;
            default: 
                printf("Invalid choice. Try again.\n");
        }
    }
    return 0;
}

